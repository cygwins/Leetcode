/*
 * dp the maximum mile can go with fix stop
 */
#include <vector>
#include <algorithm>
#include "catch.hpp"
using std::vector;
using std::max;

class Solution {
public:
    int minRefuelStops(int target, int startFuel, vector<vector<int>>& stations) {
        int N = stations.size();
        vector<long long> reach(N + 1, -1); // reach[i] = m: can reach at most m miles with only i stops
        reach[0] = startFuel;
        for(int i = 0; i < N; ++i ) { // before each stop, can only have stopped at most i times
            for(int s = i; s >= 0 && stations[i][0] <= reach[s]; --s) {
                reach[s+1] = max( reach[s+1], reach[s] + stations[i][1] ); // stop at i, make it s+1 -th stop
            }
        }
        for(int s = 0; s <= N; ++s)
            if(reach[s] >= target) return s;
        return -1;
    }
};

TEST_CASE("dp", "[minRefuelStops]") {
    Solution s;
    vector<vector<int>> station0;
    CHECK(s.minRefuelStops(100,100,station0) == 0);
    vector<vector<int>> station1 = {{10,100}};
    CHECK(s.minRefuelStops(100,1,station1) == -1);
    vector<vector<int>> station2 = {{10,60},{20,30},{30,30},{60,40}};
    CHECK(s.minRefuelStops(100,10,station2) == 2);
    vector<vector<int>> station3 = {{13,21},{26,115},{100,47},{225,99},{299,141},{444,198},{608,190},{636,157},{647,255},{841,123}};
    CHECK(s.minRefuelStops(1000,299,station3) == 4);
    vector<vector<int>> station4 = {{25,27},{36,187},{140,186},{378,6},{492,202},{517,89},{579,234},{673,86},{808,53},{954,49}};
    CHECK(s.minRefuelStops(1000,83,station4) == -1);
    vector<vector<int>> station5 = {{7628755,101639744},{11751117,156654090},{12241114,123929400},{14990938,170128657},{24195531,161701399},{32308772,43624544},{66433584,134938427},{68396870,156484817},{78204256,180589858},{109893935,35580185},{111671743,24666035},{118210724,27969405},{124496566,8079140},{128874722,79094666},{143090505,79704592},{145352879,163599886},{151322145,772299},{167914961,25673486},{187687120,198387302},{194331315,244001153},{198438320,161291448},{208158728,239205669},{215913832,230073357},{218199341,164065449},{232978814,226762856},{245228323,5620801},{246391469,73385898},{255158244,28568031},{259408313,153232722},{263684268,248715958},{269953038,75587893},{276497343,53200888},{277374123,145359059},{285214203,55186339},{290062860,192833517},{293372122,221628282},{300249473,86505102},{304959311,4345873},{319900948,179848231},{333190950,110834576},{352164877,42012442},{357057556,87025423},{361655495,119455162},{375567556,169601951},{382448720,193431526},{391326308,102884542},{399935561,20412948},{415217543,235164692},{428156887,69697057},{440142560,222180666},{457124108,233594726},{479646931,14170039},{486708367,125850253},{495778067,48934614},{497913863,200941433},{500796422,219374647},{503208872,191165692},{503693789,42268837},{521824953,101883106},{554587849,10249728},{567818906,134165043},{575807886,212453409},{580772042,203633463},{592223655,23837437},{598507993,171029941},{599462149,118000389},{602004332,152010839},{606146618,30388416},{611617165,54727655},{627499060,64582627},{682104424,28452044},{690208375,121220328},{706329620,65697174},{708333643,109151902},{712003414,32345338},{718544747,156843700},{719902426,200157751},{733841205,164229927},{762450428,189657429},{783181120,36063018},{812537469,137803252},{815526433,120952170},{853730079,54211866},{853816837,217187004},{859759135,10549150},{861814976,86757900},{883115022,222310472},{897314129,73886212},{904499666,215174634},{909186227,179120603},{911670663,97564252},{920784136,28872274},{922676703,115321708},{923085330,158669494},{954955029,60706177},{959087932,236512493},{973937404,157896841},{986787536,142182347},{991596618,222478376},{999438640,39863176}};
    CHECK(s.minRefuelStops(1000000000,38810519,station5) == 5);
}
